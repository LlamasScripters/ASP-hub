/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as AuthenticatedImport } from "./routes/_authenticated"
import { Route as IndexImport } from "./routes/index"
import { Route as AuthSendVerificationEmailImport } from "./routes/auth/send-verification-email"
import { Route as AuthRegisterImport } from "./routes/auth/register"
import { Route as AuthLoginImport } from "./routes/auth/login"
import { Route as AuthForgotPasswordImport } from "./routes/auth/forgot-password"
import { Route as AuthAccountCreatedImport } from "./routes/auth/account-created"
import { Route as AuthLayoutImport } from "./routes/auth/_layout"
import { Route as AuthVerifyIndexImport } from "./routes/auth/verify/index"
import { Route as AuthenticatedDashboardIndexImport } from "./routes/_authenticated/dashboard/index"
import { Route as AuthVerifyVerifyImport } from "./routes/auth/verify/_verify"
import { Route as AuthenticatedUserProfileImport } from "./routes/_authenticated/user/profile"
import { Route as AuthenticatedDashboardSocialImport } from "./routes/_authenticated/dashboard/social"
import { Route as AuthenticatedDashboardMembersImport } from "./routes/_authenticated/dashboard/members"
import { Route as AuthenticatedDashboardActivitiesImport } from "./routes/_authenticated/dashboard/activities"
import { Route as AuthVerifyVerifySuccessImport } from "./routes/auth/verify/_verify.success"
import { Route as AuthVerifyVerifyErrorImport } from "./routes/auth/verify/_verify.error"

// Create Virtual Routes

const AuthImport = createFileRoute("/auth")()
const AuthVerifyImport = createFileRoute("/auth/verify")()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyRoute = AuthVerifyImport.update({
  id: "/verify",
  path: "/verify",
  getParentRoute: () => AuthRoute,
} as any)

const AuthSendVerificationEmailRoute = AuthSendVerificationEmailImport.update({
  id: "/send-verification-email",
  path: "/send-verification-email",
  getParentRoute: () => AuthRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: "/register",
  path: "/register",
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: "/forgot-password",
  path: "/forgot-password",
  getParentRoute: () => AuthRoute,
} as any)

const AuthAccountCreatedRoute = AuthAccountCreatedImport.update({
  id: "/account-created",
  path: "/account-created",
  getParentRoute: () => AuthRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: "/_layout",
  getParentRoute: () => AuthRoute,
} as any)

const AuthVerifyIndexRoute = AuthVerifyIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AuthVerifyRoute,
} as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: "/dashboard/",
    path: "/dashboard/",
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthVerifyVerifyRoute = AuthVerifyVerifyImport.update({
  id: "/_verify",
  getParentRoute: () => AuthVerifyRoute,
} as any)

const AuthenticatedUserProfileRoute = AuthenticatedUserProfileImport.update({
  id: "/user/profile",
  path: "/user/profile",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardSocialRoute =
  AuthenticatedDashboardSocialImport.update({
    id: "/dashboard/social",
    path: "/dashboard/social",
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardMembersRoute =
  AuthenticatedDashboardMembersImport.update({
    id: "/dashboard/members",
    path: "/dashboard/members",
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardActivitiesRoute =
  AuthenticatedDashboardActivitiesImport.update({
    id: "/dashboard/activities",
    path: "/dashboard/activities",
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthVerifyVerifySuccessRoute = AuthVerifyVerifySuccessImport.update({
  id: "/success",
  path: "/success",
  getParentRoute: () => AuthVerifyVerifyRoute,
} as any)

const AuthVerifyVerifyErrorRoute = AuthVerifyVerifyErrorImport.update({
  id: "/error",
  path: "/error",
  getParentRoute: () => AuthVerifyVerifyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_authenticated": {
      id: "/_authenticated"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    "/auth": {
      id: "/auth"
      path: "/auth"
      fullPath: "/auth"
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    "/auth/_layout": {
      id: "/auth/_layout"
      path: "/auth"
      fullPath: "/auth"
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    "/auth/account-created": {
      id: "/auth/account-created"
      path: "/account-created"
      fullPath: "/auth/account-created"
      preLoaderRoute: typeof AuthAccountCreatedImport
      parentRoute: typeof AuthImport
    }
    "/auth/forgot-password": {
      id: "/auth/forgot-password"
      path: "/forgot-password"
      fullPath: "/auth/forgot-password"
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    "/auth/login": {
      id: "/auth/login"
      path: "/login"
      fullPath: "/auth/login"
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    "/auth/register": {
      id: "/auth/register"
      path: "/register"
      fullPath: "/auth/register"
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    "/auth/send-verification-email": {
      id: "/auth/send-verification-email"
      path: "/send-verification-email"
      fullPath: "/auth/send-verification-email"
      preLoaderRoute: typeof AuthSendVerificationEmailImport
      parentRoute: typeof AuthImport
    }
    "/_authenticated/dashboard/activities": {
      id: "/_authenticated/dashboard/activities"
      path: "/dashboard/activities"
      fullPath: "/dashboard/activities"
      preLoaderRoute: typeof AuthenticatedDashboardActivitiesImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/dashboard/members": {
      id: "/_authenticated/dashboard/members"
      path: "/dashboard/members"
      fullPath: "/dashboard/members"
      preLoaderRoute: typeof AuthenticatedDashboardMembersImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/dashboard/social": {
      id: "/_authenticated/dashboard/social"
      path: "/dashboard/social"
      fullPath: "/dashboard/social"
      preLoaderRoute: typeof AuthenticatedDashboardSocialImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/user/profile": {
      id: "/_authenticated/user/profile"
      path: "/user/profile"
      fullPath: "/user/profile"
      preLoaderRoute: typeof AuthenticatedUserProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    "/auth/verify": {
      id: "/auth/verify"
      path: "/verify"
      fullPath: "/auth/verify"
      preLoaderRoute: typeof AuthVerifyImport
      parentRoute: typeof AuthImport
    }
    "/auth/verify/_verify": {
      id: "/auth/verify/_verify"
      path: "/verify"
      fullPath: "/auth/verify"
      preLoaderRoute: typeof AuthVerifyVerifyImport
      parentRoute: typeof AuthVerifyRoute
    }
    "/_authenticated/dashboard/": {
      id: "/_authenticated/dashboard/"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    "/auth/verify/": {
      id: "/auth/verify/"
      path: "/"
      fullPath: "/auth/verify/"
      preLoaderRoute: typeof AuthVerifyIndexImport
      parentRoute: typeof AuthVerifyImport
    }
    "/auth/verify/_verify/error": {
      id: "/auth/verify/_verify/error"
      path: "/error"
      fullPath: "/auth/verify/error"
      preLoaderRoute: typeof AuthVerifyVerifyErrorImport
      parentRoute: typeof AuthVerifyVerifyImport
    }
    "/auth/verify/_verify/success": {
      id: "/auth/verify/_verify/success"
      path: "/success"
      fullPath: "/auth/verify/success"
      preLoaderRoute: typeof AuthVerifyVerifySuccessImport
      parentRoute: typeof AuthVerifyVerifyImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardActivitiesRoute: typeof AuthenticatedDashboardActivitiesRoute
  AuthenticatedDashboardMembersRoute: typeof AuthenticatedDashboardMembersRoute
  AuthenticatedDashboardSocialRoute: typeof AuthenticatedDashboardSocialRoute
  AuthenticatedUserProfileRoute: typeof AuthenticatedUserProfileRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardActivitiesRoute: AuthenticatedDashboardActivitiesRoute,
  AuthenticatedDashboardMembersRoute: AuthenticatedDashboardMembersRoute,
  AuthenticatedDashboardSocialRoute: AuthenticatedDashboardSocialRoute,
  AuthenticatedUserProfileRoute: AuthenticatedUserProfileRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthVerifyVerifyRouteChildren {
  AuthVerifyVerifyErrorRoute: typeof AuthVerifyVerifyErrorRoute
  AuthVerifyVerifySuccessRoute: typeof AuthVerifyVerifySuccessRoute
}

const AuthVerifyVerifyRouteChildren: AuthVerifyVerifyRouteChildren = {
  AuthVerifyVerifyErrorRoute: AuthVerifyVerifyErrorRoute,
  AuthVerifyVerifySuccessRoute: AuthVerifyVerifySuccessRoute,
}

const AuthVerifyVerifyRouteWithChildren =
  AuthVerifyVerifyRoute._addFileChildren(AuthVerifyVerifyRouteChildren)

interface AuthVerifyRouteChildren {
  AuthVerifyVerifyRoute: typeof AuthVerifyVerifyRouteWithChildren
  AuthVerifyIndexRoute: typeof AuthVerifyIndexRoute
}

const AuthVerifyRouteChildren: AuthVerifyRouteChildren = {
  AuthVerifyVerifyRoute: AuthVerifyVerifyRouteWithChildren,
  AuthVerifyIndexRoute: AuthVerifyIndexRoute,
}

const AuthVerifyRouteWithChildren = AuthVerifyRoute._addFileChildren(
  AuthVerifyRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRoute
  AuthAccountCreatedRoute: typeof AuthAccountCreatedRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSendVerificationEmailRoute: typeof AuthSendVerificationEmailRoute
  AuthVerifyRoute: typeof AuthVerifyRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRoute,
  AuthAccountCreatedRoute: AuthAccountCreatedRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSendVerificationEmailRoute: AuthSendVerificationEmailRoute,
  AuthVerifyRoute: AuthVerifyRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "": typeof AuthenticatedRouteWithChildren
  "/auth": typeof AuthLayoutRoute
  "/auth/account-created": typeof AuthAccountCreatedRoute
  "/auth/forgot-password": typeof AuthForgotPasswordRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/register": typeof AuthRegisterRoute
  "/auth/send-verification-email": typeof AuthSendVerificationEmailRoute
  "/dashboard/activities": typeof AuthenticatedDashboardActivitiesRoute
  "/dashboard/members": typeof AuthenticatedDashboardMembersRoute
  "/dashboard/social": typeof AuthenticatedDashboardSocialRoute
  "/user/profile": typeof AuthenticatedUserProfileRoute
  "/auth/verify": typeof AuthVerifyVerifyRouteWithChildren
  "/dashboard": typeof AuthenticatedDashboardIndexRoute
  "/auth/verify/": typeof AuthVerifyIndexRoute
  "/auth/verify/error": typeof AuthVerifyVerifyErrorRoute
  "/auth/verify/success": typeof AuthVerifyVerifySuccessRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "": typeof AuthenticatedRouteWithChildren
  "/auth": typeof AuthLayoutRoute
  "/auth/account-created": typeof AuthAccountCreatedRoute
  "/auth/forgot-password": typeof AuthForgotPasswordRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/register": typeof AuthRegisterRoute
  "/auth/send-verification-email": typeof AuthSendVerificationEmailRoute
  "/dashboard/activities": typeof AuthenticatedDashboardActivitiesRoute
  "/dashboard/members": typeof AuthenticatedDashboardMembersRoute
  "/dashboard/social": typeof AuthenticatedDashboardSocialRoute
  "/user/profile": typeof AuthenticatedUserProfileRoute
  "/auth/verify": typeof AuthVerifyIndexRoute
  "/dashboard": typeof AuthenticatedDashboardIndexRoute
  "/auth/verify/error": typeof AuthVerifyVerifyErrorRoute
  "/auth/verify/success": typeof AuthVerifyVerifySuccessRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/_authenticated": typeof AuthenticatedRouteWithChildren
  "/auth": typeof AuthRouteWithChildren
  "/auth/_layout": typeof AuthLayoutRoute
  "/auth/account-created": typeof AuthAccountCreatedRoute
  "/auth/forgot-password": typeof AuthForgotPasswordRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/register": typeof AuthRegisterRoute
  "/auth/send-verification-email": typeof AuthSendVerificationEmailRoute
  "/_authenticated/dashboard/activities": typeof AuthenticatedDashboardActivitiesRoute
  "/_authenticated/dashboard/members": typeof AuthenticatedDashboardMembersRoute
  "/_authenticated/dashboard/social": typeof AuthenticatedDashboardSocialRoute
  "/_authenticated/user/profile": typeof AuthenticatedUserProfileRoute
  "/auth/verify": typeof AuthVerifyRouteWithChildren
  "/auth/verify/_verify": typeof AuthVerifyVerifyRouteWithChildren
  "/_authenticated/dashboard/": typeof AuthenticatedDashboardIndexRoute
  "/auth/verify/": typeof AuthVerifyIndexRoute
  "/auth/verify/_verify/error": typeof AuthVerifyVerifyErrorRoute
  "/auth/verify/_verify/success": typeof AuthVerifyVerifySuccessRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | ""
    | "/auth"
    | "/auth/account-created"
    | "/auth/forgot-password"
    | "/auth/login"
    | "/auth/register"
    | "/auth/send-verification-email"
    | "/dashboard/activities"
    | "/dashboard/members"
    | "/dashboard/social"
    | "/user/profile"
    | "/auth/verify"
    | "/dashboard"
    | "/auth/verify/"
    | "/auth/verify/error"
    | "/auth/verify/success"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | ""
    | "/auth"
    | "/auth/account-created"
    | "/auth/forgot-password"
    | "/auth/login"
    | "/auth/register"
    | "/auth/send-verification-email"
    | "/dashboard/activities"
    | "/dashboard/members"
    | "/dashboard/social"
    | "/user/profile"
    | "/auth/verify"
    | "/dashboard"
    | "/auth/verify/error"
    | "/auth/verify/success"
  id:
    | "__root__"
    | "/"
    | "/_authenticated"
    | "/auth"
    | "/auth/_layout"
    | "/auth/account-created"
    | "/auth/forgot-password"
    | "/auth/login"
    | "/auth/register"
    | "/auth/send-verification-email"
    | "/_authenticated/dashboard/activities"
    | "/_authenticated/dashboard/members"
    | "/_authenticated/dashboard/social"
    | "/_authenticated/user/profile"
    | "/auth/verify"
    | "/auth/verify/_verify"
    | "/_authenticated/dashboard/"
    | "/auth/verify/"
    | "/auth/verify/_verify/error"
    | "/auth/verify/_verify/success"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard/activities",
        "/_authenticated/dashboard/members",
        "/_authenticated/dashboard/social",
        "/_authenticated/user/profile",
        "/_authenticated/dashboard/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout",
        "/auth/account-created",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/register",
        "/auth/send-verification-email",
        "/auth/verify"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth"
    },
    "/auth/account-created": {
      "filePath": "auth/account-created.tsx",
      "parent": "/auth"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx",
      "parent": "/auth"
    },
    "/auth/send-verification-email": {
      "filePath": "auth/send-verification-email.tsx",
      "parent": "/auth"
    },
    "/_authenticated/dashboard/activities": {
      "filePath": "_authenticated/dashboard/activities.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/members": {
      "filePath": "_authenticated/dashboard/members.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/social": {
      "filePath": "_authenticated/dashboard/social.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/profile": {
      "filePath": "_authenticated/user/profile.tsx",
      "parent": "/_authenticated"
    },
    "/auth/verify": {
      "filePath": "auth/verify",
      "parent": "/auth",
      "children": [
        "/auth/verify/_verify",
        "/auth/verify/"
      ]
    },
    "/auth/verify/_verify": {
      "filePath": "auth/verify/_verify.tsx",
      "parent": "/auth/verify",
      "children": [
        "/auth/verify/_verify/error",
        "/auth/verify/_verify/success"
      ]
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated"
    },
    "/auth/verify/": {
      "filePath": "auth/verify/index.tsx",
      "parent": "/auth/verify"
    },
    "/auth/verify/_verify/error": {
      "filePath": "auth/verify/_verify.error.tsx",
      "parent": "/auth/verify/_verify"
    },
    "/auth/verify/_verify/success": {
      "filePath": "auth/verify/_verify.success.tsx",
      "parent": "/auth/verify/_verify"
    }
  }
}
ROUTE_MANIFEST_END */
