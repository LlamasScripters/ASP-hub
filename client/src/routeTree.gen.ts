/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthAuthImport } from './routes/auth/_auth'
import { Route as AuthAuthRegisterImport } from './routes/auth/_auth.register'
import { Route as AuthAuthLoginImport } from './routes/auth/_auth.login'
import { Route as AuthenticatedUserSettingsImport } from './routes/_authenticated/user/settings'
import { Route as AuthenticatedUserProfileImport } from './routes/_authenticated/user/profile'
import { Route as AuthenticatedDashboardDashboardImport } from './routes/_authenticated/dashboard/_dashboard'
import { Route as AuthenticatedDashboardDashboardIndexImport } from './routes/_authenticated/dashboard/_dashboard.index'
import { Route as AuthenticatedDashboardDashboardSocialImport } from './routes/_authenticated/dashboard/_dashboard.social'
import { Route as AuthenticatedDashboardDashboardMembersImport } from './routes/_authenticated/dashboard/_dashboard.members'
import { Route as AuthenticatedDashboardDashboardActivitiesImport } from './routes/_authenticated/dashboard/_dashboard.activities'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const AuthenticatedDashboardImport = createFileRoute(
  '/_authenticated/dashboard',
)()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthenticatedUserSettingsRoute = AuthenticatedUserSettingsImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUserProfileRoute = AuthenticatedUserProfileImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardDashboardRoute =
  AuthenticatedDashboardDashboardImport.update({
    id: '/_dashboard',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardIndexRoute =
  AuthenticatedDashboardDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardSocialRoute =
  AuthenticatedDashboardDashboardSocialImport.update({
    id: '/social',
    path: '/social',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardMembersRoute =
  AuthenticatedDashboardDashboardMembersImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardActivitiesRoute =
  AuthenticatedDashboardDashboardActivitiesImport.update({
    id: '/activities',
    path: '/activities',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/_dashboard': {
      id: '/_authenticated/dashboard/_dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/user/profile': {
      id: '/_authenticated/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof AuthenticatedUserProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/user/settings': {
      id: '/_authenticated/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AuthenticatedUserSettingsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/auth/_auth/login': {
      id: '/auth/_auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/register': {
      id: '/auth/_auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthAuthImport
    }
    '/_authenticated/dashboard/_dashboard/activities': {
      id: '/_authenticated/dashboard/_dashboard/activities'
      path: '/activities'
      fullPath: '/dashboard/activities'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardActivitiesImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
    '/_authenticated/dashboard/_dashboard/members': {
      id: '/_authenticated/dashboard/_dashboard/members'
      path: '/members'
      fullPath: '/dashboard/members'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardMembersImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
    '/_authenticated/dashboard/_dashboard/social': {
      id: '/_authenticated/dashboard/_dashboard/social'
      path: '/social'
      fullPath: '/dashboard/social'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardSocialImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
    '/_authenticated/dashboard/_dashboard/': {
      id: '/_authenticated/dashboard/_dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedDashboardDashboardRouteChildren {
  AuthenticatedDashboardDashboardActivitiesRoute: typeof AuthenticatedDashboardDashboardActivitiesRoute
  AuthenticatedDashboardDashboardMembersRoute: typeof AuthenticatedDashboardDashboardMembersRoute
  AuthenticatedDashboardDashboardSocialRoute: typeof AuthenticatedDashboardDashboardSocialRoute
  AuthenticatedDashboardDashboardIndexRoute: typeof AuthenticatedDashboardDashboardIndexRoute
}

const AuthenticatedDashboardDashboardRouteChildren: AuthenticatedDashboardDashboardRouteChildren =
  {
    AuthenticatedDashboardDashboardActivitiesRoute:
      AuthenticatedDashboardDashboardActivitiesRoute,
    AuthenticatedDashboardDashboardMembersRoute:
      AuthenticatedDashboardDashboardMembersRoute,
    AuthenticatedDashboardDashboardSocialRoute:
      AuthenticatedDashboardDashboardSocialRoute,
    AuthenticatedDashboardDashboardIndexRoute:
      AuthenticatedDashboardDashboardIndexRoute,
  }

const AuthenticatedDashboardDashboardRouteWithChildren =
  AuthenticatedDashboardDashboardRoute._addFileChildren(
    AuthenticatedDashboardDashboardRouteChildren,
  )

interface AuthenticatedDashboardRouteChildren {
  AuthenticatedDashboardDashboardRoute: typeof AuthenticatedDashboardDashboardRouteWithChildren
}

const AuthenticatedDashboardRouteChildren: AuthenticatedDashboardRouteChildren =
  {
    AuthenticatedDashboardDashboardRoute:
      AuthenticatedDashboardDashboardRouteWithChildren,
  }

const AuthenticatedDashboardRouteWithChildren =
  AuthenticatedDashboardRoute._addFileChildren(
    AuthenticatedDashboardRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRouteWithChildren
  AuthenticatedUserProfileRoute: typeof AuthenticatedUserProfileRoute
  AuthenticatedUserSettingsRoute: typeof AuthenticatedUserSettingsRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRouteWithChildren,
  AuthenticatedUserProfileRoute: AuthenticatedUserProfileRoute,
  AuthenticatedUserSettingsRoute: AuthenticatedUserSettingsRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthAuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthAuthRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/dashboard': typeof AuthenticatedDashboardDashboardRouteWithChildren
  '/user/profile': typeof AuthenticatedUserProfileRoute
  '/user/settings': typeof AuthenticatedUserSettingsRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/activities': typeof AuthenticatedDashboardDashboardActivitiesRoute
  '/dashboard/members': typeof AuthenticatedDashboardDashboardMembersRoute
  '/dashboard/social': typeof AuthenticatedDashboardDashboardSocialRoute
  '/dashboard/': typeof AuthenticatedDashboardDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthAuthRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/dashboard': typeof AuthenticatedDashboardDashboardIndexRoute
  '/user/profile': typeof AuthenticatedUserProfileRoute
  '/user/settings': typeof AuthenticatedUserSettingsRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/activities': typeof AuthenticatedDashboardDashboardActivitiesRoute
  '/dashboard/members': typeof AuthenticatedDashboardDashboardMembersRoute
  '/dashboard/social': typeof AuthenticatedDashboardDashboardSocialRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRouteWithChildren
  '/_authenticated/dashboard/_dashboard': typeof AuthenticatedDashboardDashboardRouteWithChildren
  '/_authenticated/user/profile': typeof AuthenticatedUserProfileRoute
  '/_authenticated/user/settings': typeof AuthenticatedUserSettingsRoute
  '/auth/_auth/login': typeof AuthAuthLoginRoute
  '/auth/_auth/register': typeof AuthAuthRegisterRoute
  '/_authenticated/dashboard/_dashboard/activities': typeof AuthenticatedDashboardDashboardActivitiesRoute
  '/_authenticated/dashboard/_dashboard/members': typeof AuthenticatedDashboardDashboardMembersRoute
  '/_authenticated/dashboard/_dashboard/social': typeof AuthenticatedDashboardDashboardSocialRoute
  '/_authenticated/dashboard/_dashboard/': typeof AuthenticatedDashboardDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/'
    | '/dashboard'
    | '/user/profile'
    | '/user/settings'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/activities'
    | '/dashboard/members'
    | '/dashboard/social'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/'
    | '/dashboard'
    | '/user/profile'
    | '/user/settings'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/activities'
    | '/dashboard/members'
    | '/dashboard/social'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/auth/_auth'
    | '/_authenticated/'
    | '/_authenticated/dashboard'
    | '/_authenticated/dashboard/_dashboard'
    | '/_authenticated/user/profile'
    | '/_authenticated/user/settings'
    | '/auth/_auth/login'
    | '/auth/_auth/register'
    | '/_authenticated/dashboard/_dashboard/activities'
    | '/_authenticated/dashboard/_dashboard/members'
    | '/_authenticated/dashboard/_dashboard/social'
    | '/_authenticated/dashboard/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/dashboard",
        "/_authenticated/user/profile",
        "/_authenticated/user/settings"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_auth"
      ]
    },
    "/auth/_auth": {
      "filePath": "auth/_auth.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_auth/login",
        "/auth/_auth/register"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/dashboard/_dashboard"
      ]
    },
    "/_authenticated/dashboard/_dashboard": {
      "filePath": "_authenticated/dashboard/_dashboard.tsx",
      "parent": "/_authenticated/dashboard",
      "children": [
        "/_authenticated/dashboard/_dashboard/activities",
        "/_authenticated/dashboard/_dashboard/members",
        "/_authenticated/dashboard/_dashboard/social",
        "/_authenticated/dashboard/_dashboard/"
      ]
    },
    "/_authenticated/user/profile": {
      "filePath": "_authenticated/user/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/settings": {
      "filePath": "_authenticated/user/settings.tsx",
      "parent": "/_authenticated"
    },
    "/auth/_auth/login": {
      "filePath": "auth/_auth.login.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/register": {
      "filePath": "auth/_auth.register.tsx",
      "parent": "/auth/_auth"
    },
    "/_authenticated/dashboard/_dashboard/activities": {
      "filePath": "_authenticated/dashboard/_dashboard.activities.tsx",
      "parent": "/_authenticated/dashboard/_dashboard"
    },
    "/_authenticated/dashboard/_dashboard/members": {
      "filePath": "_authenticated/dashboard/_dashboard.members.tsx",
      "parent": "/_authenticated/dashboard/_dashboard"
    },
    "/_authenticated/dashboard/_dashboard/social": {
      "filePath": "_authenticated/dashboard/_dashboard.social.tsx",
      "parent": "/_authenticated/dashboard/_dashboard"
    },
    "/_authenticated/dashboard/_dashboard/": {
      "filePath": "_authenticated/dashboard/_dashboard.index.tsx",
      "parent": "/_authenticated/dashboard/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
