/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as DashboardDashboardImport } from './routes/dashboard/_dashboard'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as DashboardDashboardIndexImport } from './routes/dashboard/_dashboard.index'
import { Route as DashboardDashboardSocialImport } from './routes/dashboard/_dashboard.social'
import { Route as DashboardDashboardMembersImport } from './routes/dashboard/_dashboard.members'
import { Route as DashboardDashboardActivitiesImport } from './routes/dashboard/_dashboard.activities'
import { Route as AuthAuthRegisterImport } from './routes/auth/_auth.register'
import { Route as AuthAuthLoginImport } from './routes/auth/_auth.login'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDashboardRoute,
} as any)

const DashboardDashboardSocialRoute = DashboardDashboardSocialImport.update({
  id: '/social',
  path: '/social',
  getParentRoute: () => DashboardDashboardRoute,
} as any)

const DashboardDashboardMembersRoute = DashboardDashboardMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => DashboardDashboardRoute,
} as any)

const DashboardDashboardActivitiesRoute =
  DashboardDashboardActivitiesImport.update({
    id: '/activities',
    path: '/activities',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/_auth/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardImport
      parentRoute: typeof DashboardRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/auth/_auth/login': {
      id: '/auth/_auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/auth/_auth/register': {
      id: '/auth/_auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/dashboard/_dashboard/activities': {
      id: '/dashboard/_dashboard/activities'
      path: '/activities'
      fullPath: '/dashboard/activities'
      preLoaderRoute: typeof DashboardDashboardActivitiesImport
      parentRoute: typeof DashboardDashboardImport
    }
    '/dashboard/_dashboard/members': {
      id: '/dashboard/_dashboard/members'
      path: '/members'
      fullPath: '/dashboard/members'
      preLoaderRoute: typeof DashboardDashboardMembersImport
      parentRoute: typeof DashboardDashboardImport
    }
    '/dashboard/_dashboard/social': {
      id: '/dashboard/_dashboard/social'
      path: '/social'
      fullPath: '/dashboard/social'
      preLoaderRoute: typeof DashboardDashboardSocialImport
      parentRoute: typeof DashboardDashboardImport
    }
    '/dashboard/_dashboard/': {
      id: '/dashboard/_dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardIndexImport
      parentRoute: typeof DashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRoute
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRoute,
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardDashboardRouteChildren {
  DashboardDashboardActivitiesRoute: typeof DashboardDashboardActivitiesRoute
  DashboardDashboardMembersRoute: typeof DashboardDashboardMembersRoute
  DashboardDashboardSocialRoute: typeof DashboardDashboardSocialRoute
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardActivitiesRoute: DashboardDashboardActivitiesRoute,
  DashboardDashboardMembersRoute: DashboardDashboardMembersRoute,
  DashboardDashboardSocialRoute: DashboardDashboardSocialRoute,
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
}

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren)

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthLayoutRoute
  '/dashboard': typeof DashboardDashboardRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/activities': typeof DashboardDashboardActivitiesRoute
  '/dashboard/members': typeof DashboardDashboardMembersRoute
  '/dashboard/social': typeof DashboardDashboardSocialRoute
  '/dashboard/': typeof DashboardDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthLayoutRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
  '/': typeof AuthenticatedIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/activities': typeof DashboardDashboardActivitiesRoute
  '/dashboard/members': typeof DashboardDashboardMembersRoute
  '/dashboard/social': typeof DashboardDashboardSocialRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_dashboard': typeof DashboardDashboardRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/auth/_auth/login': typeof AuthAuthLoginRoute
  '/auth/_auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/_dashboard/activities': typeof DashboardDashboardActivitiesRoute
  '/dashboard/_dashboard/members': typeof DashboardDashboardMembersRoute
  '/dashboard/_dashboard/social': typeof DashboardDashboardSocialRoute
  '/dashboard/_dashboard/': typeof DashboardDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/dashboard'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/activities'
    | '/dashboard/members'
    | '/dashboard/social'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/dashboard'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/activities'
    | '/dashboard/members'
    | '/dashboard/social'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/auth/_layout'
    | '/dashboard'
    | '/dashboard/_dashboard'
    | '/_authenticated/'
    | '/auth/_auth/login'
    | '/auth/_auth/register'
    | '/dashboard/_dashboard/activities'
    | '/dashboard/_dashboard/members'
    | '/dashboard/_dashboard/social'
    | '/dashboard/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth",
        "/dashboard"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout",
        "/auth/_auth/login",
        "/auth/_auth/register"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_dashboard"
      ]
    },
    "/dashboard/_dashboard": {
      "filePath": "dashboard/_dashboard.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_dashboard/activities",
        "/dashboard/_dashboard/members",
        "/dashboard/_dashboard/social",
        "/dashboard/_dashboard/"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/auth/_auth/login": {
      "filePath": "auth/_auth.login.tsx",
      "parent": "/auth"
    },
    "/auth/_auth/register": {
      "filePath": "auth/_auth.register.tsx",
      "parent": "/auth"
    },
    "/dashboard/_dashboard/activities": {
      "filePath": "dashboard/_dashboard.activities.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/members": {
      "filePath": "dashboard/_dashboard.members.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/social": {
      "filePath": "dashboard/_dashboard.social.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/": {
      "filePath": "dashboard/_dashboard.index.tsx",
      "parent": "/dashboard/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
